@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap');

body {
    font-family: 'Poppins', sans-serif;
    background: linear-gradient(135deg, #8e2de2, #4a00e0);
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    color: #333;
    overflow: hidden;
    position: relative;
}

body::before {
    content: '';
    position: absolute;
    width: 200%;
    height: 200%;
    background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><text y="50" x="50" text-anchor="middle" font-size="100" opacity="0.05" transform="rotate(-45 50 50)">â™«</text></svg>');
    opacity: 0.3;
    animation: bg-scroll 60s linear infinite;
    z-index: -1;
}

@keyframes bg-scroll {
    0% { transform: translateY(0) translateX(0); }
    100% { transform: translateY(-50%) translateX(-50%); }
}

.container {
    text-align: center;
    background-color: rgba(255, 255, 255, 0.9);
    padding: 50px 40px;
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    max-width: 90%;
    width: 500px;
    transform: translateY(0);
    transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.container:hover {
    transform: translateY(-5px);
}

h1 {
    color: #6200ea;
    margin-bottom: 30px;
    font-weight: 700;
    font-size: 2.5rem;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
}

button {
    background: linear-gradient(45deg, #ff4081, #ff6e40);
    color: white;
    border: none;
    padding: 18px 36px;
    font-size: 1.2rem;
    font-weight: 600;
    cursor: pointer;
    border-radius: 50px;
    transition: all 0.3s;
    box-shadow: 0 5px 15px rgba(255, 64, 129, 0.4);
    position: relative;
    overflow: hidden;
}

button::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 5px;
    height: 5px;
    background: rgba(255, 255, 255, 0.5);
    opacity: 0;
    border-radius: 100%;
    transform: scale(1);
    transition: 0.6s;
}

button:hover {
    transform: translateY(-3px);
    box-shadow: 0 7px 20px rgba(255, 64, 129, 0.6);
}

button:active::after {
    opacity: 1;
    transform: scale(50);
    transition: 0s;
}

.subtitle {
    font-size: 1.1rem;
    color: #666;
    margin-bottom: 25px;
    font-weight: 400;
}

.result-container {
    margin-top: 40px;
    font-size: 1.5rem;
    min-height: 120px;
    padding: 25px;
    border-radius: 15px;
    background-color: #fff;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    opacity: 0;
    transform: scale(0.9);
    display: flex;
    flex-direction: column;
    justify-content: center;
    position: relative;
    overflow: hidden;
}

.result-container.active {
    opacity: 1;
    transform: scale(1);
}

/* Text shuffle animation */
@keyframes textShuffle {
    0%, 100% { opacity: 1; transform: translateY(0); }
    50% { opacity: 0.7; transform: translateY(-2px); }  
}

#albumName, #artistName {
    transition: all 0.1s ease-out;
}
#albumName.shuffling, #artistName.shuffling {
    animation: textShuffle 0.2s ease-out;
}

#albumName {
    font-size: 1.8rem;
    font-weight: 600;
    color: #6200ea;
    margin-bottom: 10px;
}

#artistName {
    font-size: 1.3rem;
    color: #777;
}

.counter {
    margin-top: 30px;
    font-size: 0.9rem;
    color: #777;
}

#albumCount {
    font-weight: 600;
    color: #ff4081;
    font-size: 1.1rem;
}

/* Add vinyl record animation */
@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

.result-container::before {
    content: '';
    position: absolute;
    width: 120px;
    height: 120px;
    background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="50" cy="50" r="45" fill="black" /><circle cx="50" cy="50" r="20" fill="white" stroke="black" stroke-width="2"/><circle cx="50" cy="50" r="5" fill="black"/></svg>');
    opacity: 0.05;
    top: 50%;
    left: -60px;
    transform: translateY(-50%);
    animation: spin 2s linear infinite;
    pointer-events: none;
}

.result-container.active::before {
    animation: spin 0.5s linear infinite;
}